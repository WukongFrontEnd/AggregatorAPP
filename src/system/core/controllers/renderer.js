/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 项目名称：AggregatorAPP (一个典型的Aggregator应用系统)
2. 文件名：src -> system -> core -> controllers -> renderer.js
3. 作者：zhaohuagang@lifang.com
4. 备注：系统核心 -> renderer类型控制器基类
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
class SystemRendererControllerBasic {
    constructor(req, res, next) {
        this.req = req ;
        this.res = res ;
        this.next = next ;
        this.templateData = {} ;        
    }
    /*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    用templateData渲染指定模板，模板路径从views下一层开始写
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    render(template) {
        this.res.render(template , this.templateData) ; 
    }
    /*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    加载语言配置文件
    @path : 相对根目录下languages目录的路径，如languages目录下的example.json，就写example，不需要写.json
    @lang : 语言种类，比如：cn | en 等
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    loadLangConf({ path , lang}) {
        let langObject = require("../../../../languages/" + path + ".json") ;
        for(let m in langObject) {
            let item = langObject[m] ;
            let value = null ;
            for(let n in item) {
                if(n === lang) value = item[n] ;
                delete item[n] ;
            }
            langObject[m] = value ;
        }
        /*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        最后把处理好的整个对象扩展到this.templateData.lang下
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
        Object.assign(this.templateData, { "lang" : langObject }) ;
    }
}

export default SystemRendererControllerBasic ;